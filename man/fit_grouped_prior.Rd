% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/prior_fitting.R
\name{fit_grouped_prior}
\alias{fit_grouped_prior}
\title{Fit priors by group}
\usage{
fit_grouped_prior(mpra_data, group_df, n_cores, plot_rep_cutoff = TRUE,
  rep_cutoff = 0.15)
}
\arguments{
\item{mpra_data}{a data frame of mpra data}

\item{group_df}{a data frame giving group identity by variant_id in mpra_data}

\item{n_cores}{number of cores to parallelize across}

\item{plot_rep_cutoff}{logical indicating whether to plot the representation cutoff used}

\item{rep_cutoff}{fraction indicating the depth-adjusted DNA count quantile to use as the cutoff}
}
\value{
a grouped prior list
}
\description{
If you have several distinct categories of variants, one may
  want to fit priors for them separately. Categories could be genomic region:
  5'UTR vs intronic vs 3'UTR vs upstream vs downstream. Perhaps you want to
  quantify the difference by some prediction outputs: up vs down vs
  no-effect.

  This yields a pseudo-hierarchical model without the computational problems
  associated with fitting a joint model on thousands of variants at once.
}
\details{
group_df should have two columns: variant_id and group_id. This
  function checks that there are >100 variants per group and that there
  aren't more than 20 groups. These are somewhat arbitrary magic numbers, but
  having loads of tiny groups is a recipe for over-fitting.
}
